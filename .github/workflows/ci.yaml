name: CI

on:
  # No matter for push or pull request events, it would trigger CI for safely saving the source code.
  # For the push event, it only runs building and testing.
  push:
    branches:
      - "master"
      - "!**e2e"
      - "!e2e**"
    paths:
#     For GitHub Action
      - ".github/workflows/ci.yaml"
      - ".github/workflows/rw_build_and_test.yaml"
      - ".github/workflows/rw_run_all_test_and_record.yaml"
#     For source code and test
      - "abe/**/*.py"
      - "!**/__pkg_info__.py"
      - "test/**/*.py"
#     For shell script for CI
      - "scripts/run_all_tests.sh"
#     For configurations for test or CI
      - ".coveragerc"
      - "codecov.yml"
      - "pytest.ini"
      - "sonar-project.properties"
#     For Python project configuration
      - "pyproject.toml"
      - "uv.lock"

  # For the push event, in addition to build and test would be run, it would trigger other service to keep the reports
  # or other checking, i.e., record the test report by CodeCov and check the code quality by SonarQube.
  pull_request:
    branches:
      - "master"
      - "!**e2e"
      - "!e2e**"
    paths:
#     For GitHub Action
      - ".github/workflows/ci.yaml"
      - ".github/workflows/rw_build_and_test.yaml"
      - ".github/workflows/rw_run_all_test_and_record.yaml"
#     For source code and test
      - "abe/**/*.py"
      - "!**/__pkg_info__.py"
      - "test/**/*.py"
#     For shell script for CI
      - "scripts/run_all_tests.sh"
#     For configurations for test or CI
      - ".coveragerc"
      - "codecov.yml"
      - "pytest.ini"
      - "sonar-project.properties"
#     For Python project configuration
      - "pyproject.toml"
      - "uv.lock"

jobs:
  build-and-test_all:
#    name: Run all tests and organize all test reports
    uses: ./.github/workflows/rw_run_all_test_and_record.yaml
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}
      sonar_token: ${{ secrets.SONAR_TOKEN }}
